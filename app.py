# Paula Betina Reyes Anaya

# importing the libraries and dependencies needed for creating the UI and supporting the deep learning models used in the project
import streamlit as st
from ultralytics import YOLO
import numpy as np
from PIL import Image

# Configuramos la p√°gina de Streamlit
st.set_page_config(page_title="Aplicaci√≥n de detecci√≥n de objetos", 
                   page_icon="happy.png", 
                   layout="centered",
                   initial_sidebar_state="auto")

# Ocultar elementos de Streamlit
hide_streamlit_style = """
    <style>
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    </style>
"""
st.markdown(hide_streamlit_style, unsafe_allow_html=True)

# Interfaz de usuario
with st.sidebar:
    st.image('Objetos.png', caption='Imagen de ejemplo de los objetos a detectar', use_container_width=True)
    st.title("Entrenamiento de un modelo YOLOv8 para detector de objetos personalizado")
    st.subheader("Detecta botas, guantes, cascos, chalecos y personas en im√°genes")
    st.write("Capture una imagen para realizar la detecci√≥n de los objetos mencionados.")

st.image('logo.png', use_container_width=True)
st.markdown('<h3 style="font-size: 18px;">Elaborado por: Paula Betina Reyes Anaya', unsafe_allow_html=True)

# Definimos el t√≠tulo y la descripci√≥n de la aplicaci√≥n
st.title("Universidad Aut√≥noma de Bucaramanga - UNAB")
st.header('Aplicaci√≥n para detectar objetos con YOLOv8', divider='rainbow')
st.subheader("Entrenar un modelo YOLOv8 para un detector de objetos personalizado como botas, guantes, casco, humano y chaleco")

with st.container(border=True):
    st.subheader("Detecci√≥n de Equipos de Protecci√≥n Personal")
    st.write("Realizado por Paula Betina Reyes :wave:")
    st.write("""
**OBJETIVO**:
Esta aplicaci√≥n permite al usuario capturar o cargar una imagen para detectar objetos espec√≠ficos (botas, guantes, cascos, humanos y chalecos) mediante un modelo YOLOv8 entrenado espec√≠ficamente para estas clases.
""")

with st.container(border=True):
    st.subheader("TRABAJO GOOGLE COLAB")
    st.write("""Enlace del modelo entrenado en Google Colab con las librer√≠as:
    https://colab.research.google.com/drive/11pruICJyx5VFHeWBX_wklpTmNKDprzcX?usp=sharing""")

# Subt√≠tulo visual
st.markdown("<h2 style='text-align: center;'>Sube una foto para detectar botas, guantes, cascos, chalecos y persona</h2>", unsafe_allow_html=True)

# Cargar el modelo YOLOv8 entrenado
model = YOLO("best.pt")
try:
    model = YOLO("best.pt")
    st.success("‚úÖ Modelo cargado correctamente")
except Exception as e:
    st.error("‚ùå Error al cargar el modelo")
    st.exception(e)
    st.stop()


# Elegir m√©todo de entrada
option = st.radio("Selecciona el m√©todo de entrada:", ("üì∏ C√°mara", "üñºÔ∏è Subir imagen"))

# Funci√≥n para mostrar resultados de detecci√≥n
def mostrar_resultado(imagen):
    results = model.predict(imagen, conf=0.25)
    pred = results[0].plot()
    st.image(pred, caption="Resultado de la detecci√≥n", use_container_width=True)

# üì∏ Entrada por c√°mara
if option == "üì∏ C√°mara":
    img_file_buffer = st.camera_input("Capture una foto para identificar un producto")    
    if img_file_buffer is None:
        st.info("Por favor tome una foto")
    else:
        image = Image.open(img_file_buffer)
        st.image(image, caption="Imagen capturada", use_column_width=True)
        mostrar_resultado(image)

# üñºÔ∏è Subir imagen
elif option == "üñºÔ∏è Subir imagen":
    uploaded_file = st.file_uploader("Sube una imagen", type=["jpg", "jpeg", "png"])
    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="Imagen cargada", use_column_width=True)
        mostrar_resultado(image)
